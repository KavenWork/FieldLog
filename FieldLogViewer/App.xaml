<Application
	x:Class="Unclassified.FieldLogViewer.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:ui="clr-namespace:Unclassified.UI"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Application.Resources>
		<!-- region Menu -->

		<!-- Expression Blend 4 created this (and a lot more) from some system theme on Windows 7 -->
		<Style TargetType="{x:Type MenuItem}">
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
			<Style.Triggers>
				<Trigger Property="Role" Value="TopLevelHeader">
					<Setter Property="Padding" Value="7,2,8,3"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
				<Trigger Property="Role" Value="TopLevelItem">
					<Setter Property="Padding" Value="7,2,8,3"/>
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
				<Trigger Property="Role" Value="SubmenuHeader">
					<Setter Property="Padding" Value="5,4,2,3"/>
					<!-- Changed from 2,3,2,3 -->
					<Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
				</Trigger>
				<Trigger Property="Role" Value="SubmenuItem">
					<Setter Property="Padding" Value="5,4,2,3"/>
					<!-- Changed from 2,3,2,3 -->
				</Trigger>
			</Style.Triggers>
		</Style>

		<!-- Expression Blend 4 created this from some system theme on Windows 7 -->
		<!-- Edited like in: http://devlicio.us/blogs/christopher_bennage/archive/2008/06/19/styling-separators-in-wpf.aspx -->
		<!-- Decreased in height to be more platform standard -->
		<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Separator}">
						<Grid Margin="0,3,0,2" SnapsToDevicePixels="true">
							<!-- Changed from 0,6,0,4 -->
							<Rectangle Fill="#E0E0E0" Height="1" Margin="30,0,1,1"/>
							<Rectangle Fill="White" Height="1" Margin="30,1,1,0"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- endregion Menu -->

		<!-- region Other -->

		<ui:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

		<Style x:Key="ReadOnlyTextBoxStyle" TargetType="{x:Type TextBox}">
			<Setter Property="Padding" Value="0"/>
			<Setter Property="IsReadOnly" Value="True"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="IsUndoEnabled" Value="False"/>
			<Setter Property="IsReadOnlyCaretVisible" Value="True"/>
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="TextWrapping" Value="Wrap"/>
		</Style>

		<Style x:Key="LightButtonStyle" TargetType="Button">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
		</Style>

		<Style x:Key="LightToggleButtonStyle" TargetType="ToggleButton">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
		</Style>

		<Style x:Key="LightComboBoxStyle" TargetType="ComboBox">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
		</Style>

		<Style x:Key="ToolBarSeparator" TargetType="Separator">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate>
						<Border BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1,0,0,0" Margin="4,0" Opacity="0.7"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- endregion Other -->
	</Application.Resources>
</Application>
